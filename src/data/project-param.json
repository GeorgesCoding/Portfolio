{
    "chess": {
        "name": "Chess Game",
        "tools": [
            "Python, PyGame, MiniMax"
        ],
        "github": "https://github.com/GeorgesCoding/Chess",
        "description": "A traditional chess game developed in Python using only the PyGame module, utilizing piece-square tables found in the Chess Programming Wiki. Includes two-player mode and an AI bot using a minimax algorithm with alpha-beta pruning. Incorporates a dialogue window to announce moves, game state and castles or checks. Also created a separate packaging module with file manipulation to help optimize the process of packaging the files into an executable using PyInstaller. The board is represented through a 2D array with pieces and spaces being numbers. For a more in-depth explanation of each component of the game, please visit the GitHub repository of the project.",
        "download": "/assets/downloads/Chess.exe",
        "video": "/assets/videos/chess-demo.mp4"
    },
    "breathalyzer": {
        "name": "Breathalyzer",
        "tools": "C/C++, Arduino, STM32, AutoCAD",
        "github": "https://github.com/GeorgesCoding/Breathalyzer",
        "description": "After acquiring some engineering design skills and knowledge, I decided to test this by making a breathalyzer along with a friend.It tackled a real-world problem of drunk driving that was extremely prevalent, especially in America. Our project revolved around an MQ3 alcohol sensor that would interface with an STM32 board, displaying the result on an LCD screen. The first problem was reading the data from the sensor and interpreting it so it could be read as a blood alcohol percentage. Through much research on the sensor itself and converting it to %BAC, we discovered an algorithm that works to our needs. However, another fact we learned about the sensor was its unreliability and inaccuracy. So to help alleviate this flaw, I implemented a calibration system. It takes real-time data on the surrounding air, using this in the computation for %BAC rather than a guessed constant. This helps with accuracy in various environments and creates a more reliable response.",
        "pictures": [
            "/assets/pictures/breathalyzer.jpg",
            "/assets/pictures/breath-circuit.png",
            "/assets/pictures/breath-diagram.png",
            "/assets/pictures/breath-model.png",
            "/assets/pictures/breath-log.jpg",
            "/assets/pictures/breath-slope.png"
        ],
        "captions": [
            "one",
            "two",
            "three",
            "four",
            "five",
            "six"
        ]
    },
    "blackjack": {
        "name": "Blackjack",
        "tools": "Java, Java Swing, Linked Lists",
        "github": "https://github.com/GeorgesCoding/Blackjack",
        "description": "Casino-style game of Blackjack, following traditional casino rules. Developed using only Java, with Java Swing as the GUI and ActionListener to recognize events. This was a joint project of me and a classmate as our year-end programming project in high school. I mainly focused on the interface and handling user inputs while occasionally aiding my friend with the logistics and helping interface the back end with the GUI. Uses linked lists to connect the deck of cards.",
        "video": "/assets/videos/blackjack-demo.mp4"
    },
    "calculator": {
        "name": "Calculator App",
        "tools": "C#, ASP.NET Core",
        "github": "https://github.com/GeorgesCoding/Calculator",
        "description": "At Plan Group, the first project I was assigned to was Project ALICE, a software development program to help create various tools to optimize CAD design for designers in the engineering and CAD teams. Since the entire project used C#, a completely new programming language for me, I utilized my free time during the first couple weeks of onboarding to familiarize myself with the syntax through a simple coding project; a calculator app. I gained knowledge in initializing objects, encapsulation of functions, built-in methods and how to use the ASP.NET Web Forms interface with Visual Studio Community. Overall this mini-project helped me learn the basics of C# programming and gave me a head start in project ALICE. Below is a button to download the app.",
        "download": "/assets/downloads/Calculator App.appref-ms",
        "video": "/assets/videos/calculator-demo.mp4"
    },
    "minesweeper": {
        "name": "Minesweeper",
        "tools": "C++",
        "github": "https://github.com/GeorgesCoding/Minesweeper",
        "description": "The retro game Minesweeper is built using C++ and played on your terminal. Each action (mark, reveal) uses bitwise operations to change the state of the board. An instance of the board is dynamically allocated and deleted from memory once the game is over. To start the game, double-click the Minesweeper.exe and your machine should automatically begin a terminal with the game initialized and ready to play. This project was the first challenging C++ project we were given in our engineering programming course but despite the difficulty being substantially higher than the previous assignments, the end result was very satisfying to see. Below is a download button for the game that will enable you to play in your computer's terminal",
        "download": "/assets/downloads/Minesweeper.exe",
        "video": "/assets/videos/minesweeper-demo.mp4"
    },
    "pHsensor": {
        "name": "pH-Sensor",
        "tools": "C/C++, Arduino, STM32, AutoCAD",
        "github": "https://github.com/GeorgesCoding/pH-sensor",
        "description": "The first hardware project I created, was built using an STM32 board, IC2 LCD screen and an Arduino-compatible probe pH-Sensor. The topic behind this project was “create something that will aid with the reduction of climate change”, so me and my partner first thoughtof oceanic pollution and decay. We researched many reasons for this phenomenon and found that the main source was pollution, with the major sign being a significant change in pH within the water. Originally, we were planning to make a rover that would be able to drive around using a remote control with a camera for long-distance activity, collect the sample and bring it back to researchers. However, creating an actual functioning rover was practically impossible without any hardware or mechanical design knowledge. So we opted for a simpler solution, a buoy. With it being built extremely cheaply, multiple can be distributed simultaneously to gather more accurate information. In the design we included a wifi module to send data over long distances, however, we were unable to implement this due to timing restraints. Above are some CAD drawings of our system along with the real-life implementation.",
        "pictures": [
            "/assets/pictures/projects-sensor.jpg",
            "/assets/pictures/sensor-realife.png",
            "/assets/pictures/sensor-newcad.png",
            "/assets/pictures/sensor-oldcad.png"
        ],
        "captions": [
            "one",
            "two",
            "three",
            "four"
        ]
    },
    "portfolio": {
        "name": "Portfolio Website",
        "tools": "JavaScript, HTML, CSS, jQuery",
        "github": "https://github.com/GeorgesCoding/Portfolio",
        "description": "Inspired by my friend and the desire to learn more about a new type of programming, decided to make a portfolio website. At first, I did a simple coming soon page with a countdown made using JavaScript and a simple ellipsis animation to make the page come to life. The original static a website was complete within 10 days, including my introduction, work experience and all my projects listed. However, I felt that this current website felt lacking, especially after I took a look at more advanced websites and realized that there was no threshold to how simple or complicated my website could be, it was entirely up to me. So I began with animating my nameusing a typewriter animation in JavaScript, paying homage to my hobby of speed typing and mechanical keyboards. After, I created asimple but functional button, moving on hover. Lastly, I decided to use a card layout to display my projects. However, because I still wanted to include a small explanation of the project in the card, but wasn’t enough room. So I thought of making the card flip on click,with the backside being the short description and links to the GitHub page and individual project page with more details. Below, I have included the coming soon page for my website that was used as a placeholder while I created the actual website.",
        "old": "portfolio/coming-soon"
    }
}